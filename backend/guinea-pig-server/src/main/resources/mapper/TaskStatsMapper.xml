<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taskManagement.mapper.TaskStatsMapper">
    
    <select id="getTaskStatusStatsByDate" resultType="com.taskManagement.dto.TaskStatusStatsDTO">
        SELECT 
            COUNT(*) as total,
            SUM(CASE WHEN status = 0 THEN 1 ELSE 0 END) as pending,
            SUM(CASE WHEN status = 1 THEN 1 ELSE 0 END) as inProgress,
            SUM(CASE WHEN status = 2 THEN 1 ELSE 0 END) as completed,
            SUM(CASE WHEN status = 3 THEN 1 ELSE 0 END) as cancelled,
            SUM(CASE WHEN DATE(deadline) = DATE(DATE_ADD(#{date}, INTERVAL #{weekOffset} WEEK)) AND status != 2 THEN 1 ELSE 0 END) as todayExpired
        FROM tb_task
        WHERE 
            (
                <!-- 任务在指定日期仍处于活跃状态 -->
                (start_time IS NULL OR DATE(start_time) &lt;= DATE(DATE_ADD(#{date}, INTERVAL #{weekOffset} WEEK)))
                AND
                (deadline IS NULL OR DATE(deadline) &gt;= DATE(DATE_ADD(#{date}, INTERVAL #{weekOffset} WEEK)))
            )
            OR
            <!-- 当天创建的任务也包括 -->
            DATE(create_time) = DATE(DATE_ADD(#{date}, INTERVAL #{weekOffset} WEEK))
            OR
            <!-- 当天完成的任务也包括 -->
            (status = 2 AND DATE(completed_time) = DATE(DATE_ADD(#{date}, INTERVAL #{weekOffset} WEEK)))
    </select>

    <select id="getTaskStats" resultType="java.util.Map">
        SELECT 
            COUNT(*) as total,
            SUM(CASE WHEN status = 0 THEN 1 ELSE 0 END) as pending,
            SUM(CASE WHEN status = 1 THEN 1 ELSE 0 END) as inProgress,
            SUM(CASE WHEN status = 2 THEN 1 ELSE 0 END) as completed,
            SUM(CASE WHEN status = 3 THEN 1 ELSE 0 END) as cancelled
        FROM tb_task
        <where>
            <if test="projectId != null">
                project_id = #{projectId}
            </if>
        </where>
    </select>

    <select id="getUserTaskStats" resultType="java.util.Map">
        SELECT 
            COUNT(DISTINCT t.id) as total,
            COUNT(DISTINCT CASE WHEN t.status = 0 THEN t.id ELSE NULL END) as pending,
            COUNT(DISTINCT CASE WHEN t.status = 1 THEN t.id ELSE NULL END) as inProgress,
            COUNT(DISTINCT CASE WHEN t.status = 2 THEN t.id ELSE NULL END) as completed,
            COUNT(DISTINCT CASE WHEN t.status = 3 THEN t.id ELSE NULL END) as cancelled,
            COUNT(DISTINCT CASE WHEN DATE(t.deadline) = CURDATE() AND t.status != 2 THEN t.id ELSE NULL END) as todayExpired
        FROM 
            tb_task t
        LEFT JOIN 
            tb_task_member tm ON t.id = tm.task_id
        WHERE 
            t.create_user = #{userId} OR tm.user_id = #{userId}
    </select>

    <select id="getUserTasksCount" resultType="java.lang.Integer">
        SELECT COUNT(DISTINCT t.id)
        FROM tb_task t
        LEFT JOIN tb_task_member tm ON t.id = tm.task_id
        WHERE t.create_user = #{userId} OR tm.user_id = #{userId}
        <if test="status != null">
            AND t.status = #{status}
        </if>
    </select>

    <select id="getUserTasksByStatus" resultType="com.taskManagement.dto.TaskDTO">
        SELECT DISTINCT
            t.id, t.name, t.description, t.project_id as projectId,
            t.status, t.priority, t.start_time as startTime,
            t.deadline, t.completed_time as completeTime,
            t.comment_count as commentCount, t.create_user as createUser,
            t.create_time as createTime, t.update_user as updateUser,
            t.update_time as updateTime
        FROM tb_task t
        LEFT JOIN tb_task_member tm ON t.id = tm.task_id
        WHERE t.create_user = #{userId} OR tm.user_id = #{userId}
        <if test="status != null">
            AND t.status = #{status}
        </if>
        ORDER BY t.create_time DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <select id="getUserTodayExpiredTasksCount" resultType="java.lang.Integer">
        SELECT COUNT(DISTINCT t.id)
        FROM tb_task t
        LEFT JOIN tb_task_member tm ON t.id = tm.task_id
        WHERE (t.create_user = #{userId} OR tm.user_id = #{userId})
        AND DATE(t.deadline) = CURDATE()
        AND t.status != 2
        AND t.status != 3
    </select>

    <select id="getUserTodayExpiredTasks" resultType="com.taskManagement.dto.TaskDTO">
        SELECT DISTINCT
            t.id, t.name, t.description, t.project_id as projectId,
            t.status, t.priority, t.start_time as startTime,
            t.deadline, t.completed_time as completeTime,
            t.comment_count as commentCount, t.create_user as createUser,
            t.create_time as createTime, t.update_user as updateUser,
            t.update_time as updateTime
        FROM tb_task t
        LEFT JOIN tb_task_member tm ON t.id = tm.task_id
        WHERE (t.create_user = #{userId} OR tm.user_id = #{userId})
        AND DATE(t.deadline) = CURDATE()
        AND t.status != 2
        AND t.status != 3
        ORDER BY t.create_time DESC
        LIMIT #{offset}, #{pageSize}
    </select>
    
    <select id="getTaskPriorityDistribution" resultType="java.util.Map">
        SELECT 
            COUNT(DISTINCT CASE WHEN t.priority = 1 THEN t.id ELSE NULL END) as low,
            COUNT(DISTINCT CASE WHEN t.priority = 2 THEN t.id ELSE NULL END) as medium,
            COUNT(DISTINCT CASE WHEN t.priority = 3 THEN t.id ELSE NULL END) as high,
            COUNT(DISTINCT CASE WHEN t.priority = 4 THEN t.id ELSE NULL END) as critical
        FROM tb_task t
        LEFT JOIN tb_task_member tm ON t.id = tm.task_id
        WHERE (t.create_user = #{userId} OR tm.user_id = #{userId})
        AND (t.status = 0 OR t.status = 1)
    </select>
</mapper> 